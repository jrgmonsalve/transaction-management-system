services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    networks:
      - app-network

  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/${NGINX_CONF}:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/ssl/certs
      - ./backend:/var/www/html
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  db-data:


networks:
  app-network:
    driver: bridge
